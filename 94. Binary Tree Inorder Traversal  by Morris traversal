/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* successor(TreeNode *left,TreeNode *curr)
    {
        TreeNode *succ=left;
        while(succ->right!=NULL && succ->right!=curr)
        {
            succ=succ->right;
        }
        return succ;
    }
    
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        TreeNode *curr=root;
        TreeNode *left;
        TreeNode *succ;
        while(curr!=NULL)
        {
           left=curr->left;
           if(left==NULL)
           {
              ans.push_back(curr->val);
              curr=curr->right;
           }
           else
           {
              succ=successor(left,curr);
              if(succ->right==NULL)
              {
                  succ->right=curr;
                  curr=curr->left;
              }
              else
              {
                  succ->right=NULL;
                  ans.push_back(curr->val);
                  curr=curr->right;
              }
           }
        }
        return ans;
    }
};
